/*
Blnk

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateBalanceMonitorRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBalanceMonitorRequest{}

// UpdateBalanceMonitorRequest struct for UpdateBalanceMonitorRequest
type UpdateBalanceMonitorRequest struct {
	BalanceId string    `json:"balance_id"`
	Condition Condition `json:"condition"`
}

type _UpdateBalanceMonitorRequest UpdateBalanceMonitorRequest

// NewUpdateBalanceMonitorRequest instantiates a new UpdateBalanceMonitorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBalanceMonitorRequest(balanceId string, condition Condition) *UpdateBalanceMonitorRequest {
	this := UpdateBalanceMonitorRequest{}
	this.BalanceId = balanceId
	this.Condition = condition
	return &this
}

// NewUpdateBalanceMonitorRequestWithDefaults instantiates a new UpdateBalanceMonitorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBalanceMonitorRequestWithDefaults() *UpdateBalanceMonitorRequest {
	this := UpdateBalanceMonitorRequest{}
	return &this
}

// GetBalanceId returns the BalanceId field value
func (o *UpdateBalanceMonitorRequest) GetBalanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BalanceId
}

// GetBalanceIdOk returns a tuple with the BalanceId field value
// and a boolean to check if the value has been set.
func (o *UpdateBalanceMonitorRequest) GetBalanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalanceId, true
}

// SetBalanceId sets field value
func (o *UpdateBalanceMonitorRequest) SetBalanceId(v string) {
	o.BalanceId = v
}

// GetCondition returns the Condition field value
func (o *UpdateBalanceMonitorRequest) GetCondition() Condition {
	if o == nil {
		var ret Condition
		return ret
	}

	return o.Condition
}

// GetConditionOk returns a tuple with the Condition field value
// and a boolean to check if the value has been set.
func (o *UpdateBalanceMonitorRequest) GetConditionOk() (*Condition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Condition, true
}

// SetCondition sets field value
func (o *UpdateBalanceMonitorRequest) SetCondition(v Condition) {
	o.Condition = v
}

func (o UpdateBalanceMonitorRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateBalanceMonitorRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["balance_id"] = o.BalanceId
	toSerialize["condition"] = o.Condition
	return toSerialize, nil
}

func (o *UpdateBalanceMonitorRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"balance_id",
		"condition",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateBalanceMonitorRequest := _UpdateBalanceMonitorRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateBalanceMonitorRequest)

	if err != nil {
		return err
	}

	*o = UpdateBalanceMonitorRequest(varUpdateBalanceMonitorRequest)

	return err
}

type NullableUpdateBalanceMonitorRequest struct {
	value *UpdateBalanceMonitorRequest
	isSet bool
}

func (v NullableUpdateBalanceMonitorRequest) Get() *UpdateBalanceMonitorRequest {
	return v.value
}

func (v *NullableUpdateBalanceMonitorRequest) Set(val *UpdateBalanceMonitorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBalanceMonitorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBalanceMonitorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBalanceMonitorRequest(val *UpdateBalanceMonitorRequest) *NullableUpdateBalanceMonitorRequest {
	return &NullableUpdateBalanceMonitorRequest{value: val, isSet: true}
}

func (v NullableUpdateBalanceMonitorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBalanceMonitorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
