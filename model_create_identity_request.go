/*
Blnk

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateIdentityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIdentityRequest{}

// CreateIdentityRequest struct for CreateIdentityRequest
type CreateIdentityRequest struct {
	IdentityType string    `json:"identity_type"`
	Name         string    `json:"name"`
	Category     string    `json:"category"`
	Street       string    `json:"street"`
	Country      string    `json:"country"`
	State        string    `json:"state"`
	PostCode     string    `json:"post_code"`
	City         string    `json:"city"`
	CreatedAt    string    `json:"created_at"`
	MetaData     MetaData2 `json:"meta_data"`
}

type _CreateIdentityRequest CreateIdentityRequest

// NewCreateIdentityRequest instantiates a new CreateIdentityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIdentityRequest(identityType string, name string, category string, street string, country string, state string, postCode string, city string, createdAt string, metaData MetaData2) *CreateIdentityRequest {
	this := CreateIdentityRequest{}
	this.IdentityType = identityType
	this.Name = name
	this.Category = category
	this.Street = street
	this.Country = country
	this.State = state
	this.PostCode = postCode
	this.City = city
	this.CreatedAt = createdAt
	this.MetaData = metaData
	return &this
}

// NewCreateIdentityRequestWithDefaults instantiates a new CreateIdentityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIdentityRequestWithDefaults() *CreateIdentityRequest {
	this := CreateIdentityRequest{}
	return &this
}

// GetIdentityType returns the IdentityType field value
func (o *CreateIdentityRequest) GetIdentityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityType
}

// GetIdentityTypeOk returns a tuple with the IdentityType field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetIdentityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityType, true
}

// SetIdentityType sets field value
func (o *CreateIdentityRequest) SetIdentityType(v string) {
	o.IdentityType = v
}

// GetName returns the Name field value
func (o *CreateIdentityRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateIdentityRequest) SetName(v string) {
	o.Name = v
}

// GetCategory returns the Category field value
func (o *CreateIdentityRequest) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *CreateIdentityRequest) SetCategory(v string) {
	o.Category = v
}

// GetStreet returns the Street field value
func (o *CreateIdentityRequest) GetStreet() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Street
}

// GetStreetOk returns a tuple with the Street field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetStreetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Street, true
}

// SetStreet sets field value
func (o *CreateIdentityRequest) SetStreet(v string) {
	o.Street = v
}

// GetCountry returns the Country field value
func (o *CreateIdentityRequest) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *CreateIdentityRequest) SetCountry(v string) {
	o.Country = v
}

// GetState returns the State field value
func (o *CreateIdentityRequest) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CreateIdentityRequest) SetState(v string) {
	o.State = v
}

// GetPostCode returns the PostCode field value
func (o *CreateIdentityRequest) GetPostCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostCode
}

// GetPostCodeOk returns a tuple with the PostCode field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetPostCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostCode, true
}

// SetPostCode sets field value
func (o *CreateIdentityRequest) SetPostCode(v string) {
	o.PostCode = v
}

// GetCity returns the City field value
func (o *CreateIdentityRequest) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *CreateIdentityRequest) SetCity(v string) {
	o.City = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateIdentityRequest) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateIdentityRequest) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetMetaData returns the MetaData field value
func (o *CreateIdentityRequest) GetMetaData() MetaData2 {
	if o == nil {
		var ret MetaData2
		return ret
	}

	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value
// and a boolean to check if the value has been set.
func (o *CreateIdentityRequest) GetMetaDataOk() (*MetaData2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaData, true
}

// SetMetaData sets field value
func (o *CreateIdentityRequest) SetMetaData(v MetaData2) {
	o.MetaData = v
}

func (o CreateIdentityRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIdentityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identity_type"] = o.IdentityType
	toSerialize["name"] = o.Name
	toSerialize["category"] = o.Category
	toSerialize["street"] = o.Street
	toSerialize["country"] = o.Country
	toSerialize["state"] = o.State
	toSerialize["post_code"] = o.PostCode
	toSerialize["city"] = o.City
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["meta_data"] = o.MetaData
	return toSerialize, nil
}

func (o *CreateIdentityRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identity_type",
		"name",
		"category",
		"street",
		"country",
		"state",
		"post_code",
		"city",
		"created_at",
		"meta_data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIdentityRequest := _CreateIdentityRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIdentityRequest)

	if err != nil {
		return err
	}

	*o = CreateIdentityRequest(varCreateIdentityRequest)

	return err
}

type NullableCreateIdentityRequest struct {
	value *CreateIdentityRequest
	isSet bool
}

func (v NullableCreateIdentityRequest) Get() *CreateIdentityRequest {
	return v.value
}

func (v *NullableCreateIdentityRequest) Set(val *CreateIdentityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIdentityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIdentityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIdentityRequest(val *CreateIdentityRequest) *NullableCreateIdentityRequest {
	return &NullableCreateIdentityRequest{value: val, isSet: true}
}

func (v NullableCreateIdentityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIdentityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
