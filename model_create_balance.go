/*
Blnk

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBalance{}

// CreateBalance struct for CreateBalance
type CreateBalance struct {
	BalanceId          string         `json:"balance_id"`
	Balance            int32          `json:"balance"`
	CreditBalance      int32          `json:"credit_balance"`
	DebitBalance       int32          `json:"debit_balance"`
	Currency           string         `json:"currency"`
	CurrencyMultiplier int32          `json:"currency_multiplier"`
	LedgerId           string         `json:"ledger_id"`
	IdentityId         string         `json:"identity_id"`
	CreatedAt          string         `json:"created_at"`
	MetaData           NullableString `json:"meta_data"`
}

type _CreateBalance CreateBalance

// NewCreateBalance instantiates a new CreateBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBalance(balanceId string, balance int32, creditBalance int32, debitBalance int32, currency string, currencyMultiplier int32, ledgerId string, identityId string, createdAt string, metaData NullableString) *CreateBalance {
	this := CreateBalance{}
	this.BalanceId = balanceId
	this.Balance = balance
	this.CreditBalance = creditBalance
	this.DebitBalance = debitBalance
	this.Currency = currency
	this.CurrencyMultiplier = currencyMultiplier
	this.LedgerId = ledgerId
	this.IdentityId = identityId
	this.CreatedAt = createdAt
	this.MetaData = metaData
	return &this
}

// NewCreateBalanceWithDefaults instantiates a new CreateBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBalanceWithDefaults() *CreateBalance {
	this := CreateBalance{}
	return &this
}

// GetBalanceId returns the BalanceId field value
func (o *CreateBalance) GetBalanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BalanceId
}

// GetBalanceIdOk returns a tuple with the BalanceId field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetBalanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalanceId, true
}

// SetBalanceId sets field value
func (o *CreateBalance) SetBalanceId(v string) {
	o.BalanceId = v
}

// GetBalance returns the Balance field value
func (o *CreateBalance) GetBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *CreateBalance) SetBalance(v int32) {
	o.Balance = v
}

// GetCreditBalance returns the CreditBalance field value
func (o *CreateBalance) GetCreditBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreditBalance
}

// GetCreditBalanceOk returns a tuple with the CreditBalance field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetCreditBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditBalance, true
}

// SetCreditBalance sets field value
func (o *CreateBalance) SetCreditBalance(v int32) {
	o.CreditBalance = v
}

// GetDebitBalance returns the DebitBalance field value
func (o *CreateBalance) GetDebitBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DebitBalance
}

// GetDebitBalanceOk returns a tuple with the DebitBalance field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetDebitBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DebitBalance, true
}

// SetDebitBalance sets field value
func (o *CreateBalance) SetDebitBalance(v int32) {
	o.DebitBalance = v
}

// GetCurrency returns the Currency field value
func (o *CreateBalance) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *CreateBalance) SetCurrency(v string) {
	o.Currency = v
}

// GetCurrencyMultiplier returns the CurrencyMultiplier field value
func (o *CreateBalance) GetCurrencyMultiplier() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrencyMultiplier
}

// GetCurrencyMultiplierOk returns a tuple with the CurrencyMultiplier field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetCurrencyMultiplierOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyMultiplier, true
}

// SetCurrencyMultiplier sets field value
func (o *CreateBalance) SetCurrencyMultiplier(v int32) {
	o.CurrencyMultiplier = v
}

// GetLedgerId returns the LedgerId field value
func (o *CreateBalance) GetLedgerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LedgerId
}

// GetLedgerIdOk returns a tuple with the LedgerId field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetLedgerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LedgerId, true
}

// SetLedgerId sets field value
func (o *CreateBalance) SetLedgerId(v string) {
	o.LedgerId = v
}

// GetIdentityId returns the IdentityId field value
func (o *CreateBalance) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *CreateBalance) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateBalance) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateBalance) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateBalance) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetMetaData returns the MetaData field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateBalance) GetMetaData() string {
	if o == nil || o.MetaData.Get() == nil {
		var ret string
		return ret
	}

	return *o.MetaData.Get()
}

// GetMetaDataOk returns a tuple with the MetaData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateBalance) GetMetaDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetaData.Get(), o.MetaData.IsSet()
}

// SetMetaData sets field value
func (o *CreateBalance) SetMetaData(v string) {
	o.MetaData.Set(&v)
}

func (o CreateBalance) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["balance_id"] = o.BalanceId
	toSerialize["balance"] = o.Balance
	toSerialize["credit_balance"] = o.CreditBalance
	toSerialize["debit_balance"] = o.DebitBalance
	toSerialize["currency"] = o.Currency
	toSerialize["currency_multiplier"] = o.CurrencyMultiplier
	toSerialize["ledger_id"] = o.LedgerId
	toSerialize["identity_id"] = o.IdentityId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["meta_data"] = o.MetaData.Get()
	return toSerialize, nil
}

func (o *CreateBalance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"balance_id",
		"balance",
		"credit_balance",
		"debit_balance",
		"currency",
		"currency_multiplier",
		"ledger_id",
		"identity_id",
		"created_at",
		"meta_data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBalance := _CreateBalance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateBalance)

	if err != nil {
		return err
	}

	*o = CreateBalance(varCreateBalance)

	return err
}

type NullableCreateBalance struct {
	value *CreateBalance
	isSet bool
}

func (v NullableCreateBalance) Get() *CreateBalance {
	return v.value
}

func (v *NullableCreateBalance) Set(val *CreateBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBalance(val *CreateBalance) *NullableCreateBalance {
	return &NullableCreateBalance{value: val, isSet: true}
}

func (v NullableCreateBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
